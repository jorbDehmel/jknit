jpres Demonstration
============================================
skip
among
us
skip

## Jordan Dehmel

============================================

```{octave}
% This is a matrix
A = [1, 2, 3; 4, 5, 6; 7, 8, 9]
```

The following Octave code shares the scope of all Octave code which was previously run.
Thus, A exists in scope, and the following produces output.

```{octave}
A
```

Functions in Octave
====================================================

This is a function definition in Octave.
This chunk is marked with a ^, meaning that
it produces no output.

```{octave}^
function printmatrix (mat)
  disp('The following matrix was inputted:');
  mat
endfunction
```

This is a funciton call in octave.
It uses our matrix from before to demonstrate scoping and function calls.

```{octave}
printmatrix(A)
```

Languages
====================================================

JKnit also offers native compatibility with C++, Python, bash, JavaScript and Rust.
These must be installed on your machine.

```{bash}
echo "Hello from bash!"
```

Compiled Languages
====================================================

C++ and Rust are both compiled languages which require main functions.
Thus, it does not make much sense to link multiple chunks together.
By default, they are marked as "loner" chunks via the \* operator in
their name.

C++
====================================================

```{clang++*}
#include <iostream>
using namespace std;

// Comment comment comment
int main()
{
  cout << "Hello from C++!\n";
  int a = 1 + 2 + 3 + 56;
  return 0;
}
```

Rust
====================================================

```{rust*}
fn main() {
  println!("Hello from Rust!");
}
```
